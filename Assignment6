
--Q1

select * from Employees where salary < 2300;

DROP TABLE emp_log

CREATE TABLE      Emp_log(
   Updated_Date	DATE,
   Updated_By	Varchar2 (20),
   Action         Varchar2 (30)
);

CREATE OR REPLACE TRIGGER Emp_Delete
AFTER DELETE ON Employees
FOR EACH ROW
BEGIN
   INSERT INTO Emp_Log (Updated_Date, Updated_By, Action)
   VALUES (SYSDATE, USER, 'DELETE');
END;

DELETE Employees where salary < 2300;

SELECT * FROM Emp_Log;

ROLLBACK;

DROP TRIGGER Emp_Delete;

/*

OUTPUT


EMPLOYEE_ID FIRST_NAME           LAST_NAME                 EMAIL                     PHONE_NUMBER         HIRE_DAT JOB_ID         SALARY COMMISSION_PCT MANAGER_ID DEPARTMENT_ID
----------- -------------------- ------------------------- ------------------------- -------------------- -------- ---------- ---------- -------------- ---------- -------------
        128 Steven               Markle                    SMARKLE                   650.124.1434         08-03-00 ST_CLERK         2200                       120            50
        132 TJ                   Olson                     TJOLSON                   650.124.8234         10-04-99 ST_CLERK         2100                       121            50
        136 Hazel                Philtanker                HPHILTAN                  650.127.1634         06-02-00 ST_CLERK         2200                       122            50


Table EMP_LOG dropped.


Table EMP_LOG created.


Trigger EMP_DELETE compiled


3 rows deleted.


UPDATED_ UPDATED_BY           ACTION                        
-------- -------------------- ------------------------------
05-03-23 DRANE                DELETE                        
05-03-23 DRANE                DELETE                        
05-03-23 DRANE                DELETE                        


Rollback complete.


Trigger EMP_DELETE dropped.

*/


--Q2

select * from Employees where manager_id =  103;

DROP TABLE Empl_Del_log;

DROP TRIGGER Empl_Del_Row;

CREATE TABLE Empl_Del_log (
   Empno       number (6),
   OLD_fname   Varchar2 (20),
   OLD_lname   varchar2 (25),
   OLD_sal     number (8, 2),
   OLD_mgrno   number  (6),  
   Updated_Date	DATE,
   Updated_By	Varchar2 (15),
   Action         Varchar2 (30)
);

CREATE OR REPLACE TRIGGER Empl_Del_Row
AFTER DELETE ON Employees
FOR EACH ROW
DECLARE
    Updated_Date DATE := SYSDATE;
    Updated_By VARCHAR2(15) := USER;
BEGIN
    INSERT INTO Empl_Del_log (Empno, OLD_fname, OLD_lname, OLD_sal, OLD_mgrno, Updated_Date, Updated_By, Action)
    VALUES (:OLD.employee_id, :OLD.first_name, :OLD.last_name, :OLD.salary, :OLD.manager_id, Updated_Date, Updated_By, 'DELETE');
END;
/

delete Employees where manager_id =  103;

Column OLD_Deptname format A10
Column NEW_Deptname format A10

Select * from Empl_Del_log;


rollback;




/*
OUTPUT


EMPLOYEE_ID FIRST_NAME           LAST_NAME                 EMAIL                     PHONE_NUMBER         HIRE_DAT JOB_ID         SALARY COMMISSION_PCT MANAGER_ID DEPARTMENT_ID
----------- -------------------- ------------------------- ------------------------- -------------------- -------- ---------- ---------- -------------- ---------- -------------
        104 Bruce                Ernst                     BERNST                    590.423.4568         21-05-91 IT_PROG          6000                       103            60
        105 David                Austin                    DAUSTIN                   590.423.4569         25-06-97 IT_PROG          4800                       103            60
        106 Valli                Pataballa                 VPATABAL                  590.423.4560         05-02-98 IT_PROG          4800                       103            60
        107 Diana                Lorentz                   DLORENTZ                  590.423.5567         07-02-99 IT_PROG          4200                       103            60


Table EMPL_DEL_LOG dropped.


Trigger EMPL_DEL_ROW dropped.


Table EMPL_DEL_LOG created.


Trigger EMPL_DEL_ROW compiled


4 rows deleted.


     EMPNO OLD_FNAME            OLD_LNAME                    OLD_SAL  OLD_MGRNO UPDATED_ UPDATED_BY      ACTION                        
---------- -------------------- ------------------------- ---------- ---------- -------- --------------- ------------------------------
       104 Bruce                Ernst                           6000        103 06-03-23 DRANE           DELETE                        
       105 David                Austin                          4800        103 06-03-23 DRANE           DELETE                        
       106 Valli                Pataballa                       4800        103 06-03-23 DRANE           DELETE                        
       107 Diana                Lorentz                         4200        103 06-03-23 DRANE           DELETE                        


Rollback complete.

*/

--Q3


DROP TABLE Dept_log;

DROP TRIGGER Empl_Del_Row;

CREATE TABLE      Dept_log(
   OLD_Deptno     number (4),
   NEW_Deptno     number (4),
   OLD_Deptname   Varchar2 (30),
   NEW_Deptname   Varchar2 (30),
   OLD_MgrID      number (6),
   NEW_MgrID      number (6),
   Updated_Date	DATE,
   Updated_By	Varchar2 (15),
   Action         Varchar2 (25)
);

CREATE OR REPLACE TRIGGER Dept_Change
AFTER INSERT OR UPDATE OF manager_id OR DELETE ON departments
FOR EACH ROW
WHEN (new.manager_id IS NOT NULL OR old.manager_id IS NOT NULL)
DECLARE
    v_action VARCHAR2(25);
BEGIN
    IF INSERTING THEN
        v_action := 'INSERT';
    ELSIF UPDATING THEN
        v_action := 'UPDATE';
    ELSIF DELETING THEN
        v_action := 'DELETE';
    END IF;
    
    INSERT INTO Dept_log(OLD_Deptno, NEW_Deptno, OLD_Deptname, NEW_Deptname, OLD_MgrID, NEW_MgrID, Updated_Date, Updated_By, Action)
    VALUES (:OLD.department_id, :NEW.department_id, :OLD.department_name, :NEW.department_name, :OLD.manager_id, :NEW.manager_id, SYSDATE, USER, v_action);
END;
/

Column OLD_Deptname format A10
Column NEW_Deptname format A10

SELECT * from Dept_log ;

INSERT INTO departments VALUES (290, 'Test', null, 1700);

UPDATE departments set manager_id = 103   WHERE department_id = 290;

DELETE departments where department_id = 290;

SELECT * from Dept_log ;

rollback;


/*

OUTPUT

Table DEPT_LOG created.


Trigger DEPT_CHANGE compiled

no rows selected

1 row inserted.


1 row updated.


1 row deleted.


OLD_DEPTNO NEW_DEPTNO OLD_DEPTNA NEW_DEPTNA  OLD_MGRID  NEW_MGRID UPDATED_ UPDATED_BY      ACTION                   
---------- ---------- ---------- ---------- ---------- ---------- -------- --------------- -------------------------
       290        290 Test       Test                         103 06-03-23 DRANE           UPDATE                   
       290            Test                         103            06-03-23 DRANE           DELETE                   


Rollback complete.

*/

--Q4

CREATE OR REPLACE PACKAGE Pkg_Emp_Boss AS
  FUNCTION Emp_Boss(emp_id IN NUMBER) RETURN VARCHAR2;
  FUNCTION Emp_Boss(emp_email IN VARCHAR2) RETURN VARCHAR2;
END Pkg_Emp_Boss;
/

CREATE OR REPLACE PACKAGE BODY Pkg_Emp_Boss AS
  FUNCTION Emp_Boss(emp_id IN NUMBER) RETURN VARCHAR2 IS
    boss_fname VARCHAR2(46);
  BEGIN
    SELECT first_name || ' ' || last_name
    INTO boss_fname
    FROM employees
    WHERE employee_id = (SELECT manager_id FROM employees WHERE employee_id = emp_id);
    RETURN boss_fname;
  END Emp_Boss;
  
  FUNCTION Emp_Boss(emp_email IN VARCHAR2) RETURN VARCHAR2 IS
    boss_fname VARCHAR2(46);
  BEGIN
    SELECT first_name || ' ' || last_name
    INTO boss_fname
    FROM employees
    WHERE employee_id = (SELECT manager_id FROM employees WHERE email = emp_email);
    RETURN boss_fname;
  END Emp_Boss;
  
BEGIN
  NULL;
END Pkg_Emp_Boss;
/

DECLARE
  supervisor_name VARCHAR2(46);
BEGIN
  supervisor_name := Pkg_Emp_Boss.Emp_Boss(199);
  DBMS_OUTPUT.PUT_LINE('For the employee with ID 199, his supervisor name is ' || supervisor_name || '.');

  supervisor_name := Pkg_Emp_Boss.Emp_Boss('DGRANT');
  DBMS_OUTPUT.PUT_LINE('For the employee with email ''DGRANT'', his supervisor name is ' || supervisor_name || '.');
END;
/

/*

OUTPUT


Package PKG_EMP_BOSS compiled


Package Body PKG_EMP_BOSS compiled


PL/SQL procedure successfully completed.

For the employee with ID 199, his supervisor name is Kevin Mourgos.
For the employee with email 'DGRANT', his supervisor name is Kevin Mourgos.

*/
